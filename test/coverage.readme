# Copyright (c) 2013 Rich Porter - see LICENSE for further details

# execute base line regression
./coverage test_coverage_multiple.py +cvr_seed+0xdead +tst_seed+1 +master=1 +instances=20 +children=12
# add some more tests with different seed
./coverage test_coverage_multiple.py +cvr_seed+0xdead +tst_seed+2 +master=1 +instances=20 +children=14
# see where that got us
./optimize -r 1484 -r 1497
# and a few more to hopefully close coverage
./coverage test_coverage_multiple.py +cvr_seed+0xdead +tst_seed+3 +master=1 +instances=20 +children=18
# cherry pick 'best' runs using default order
./optimize -r 1484 -r 1497 -r 1515
# replay the selected seeds to check we're still at 100%
./coverage test_coverage_multiple.py +cvr_seed+0xdead +master=1 +instances=20 +test_xml=optimize_1484.xml
# rerun using multiple iterations, the second and third random orders may reduce the set size slightly.
./optimize -r 1484 -r 1497 -r 1515 --order cvg --order rand --order rand --order cvg
# use "incr" ordering; but only switch from cvg at 95%
./optimize -r 1484 -r 1497 -r 1515 --order incr --threshold 95

# 
# Heat map demonstration
# 

# uses random mixture of given tests
# use web app "heat map" to look at hits in graph & matrix views
./coverage test_coverage_multiple.py \
  +tst_seed=8129 \
  +cvr_seed+0xcdead \
  +master=1 \
  +instances=20 \
  +tests=test_coverage_skew_high.py,test_coverage_skew_low.py,test_coverage_multiple.py,test_coverage_skew_middle.py \
  +children=100
